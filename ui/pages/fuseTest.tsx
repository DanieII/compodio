import Head from 'next/head'
import Fuse from 'fuse.js'
import { useShowsQuery } from '../hooks/queries/shows';
import styles from '../styles/Home.module.css'
import ResultItem from '../components/layout/header/search/resultItem';
import ComboBoxSearch from '../components/search/ComboBoxSearch';


export default function Home() {


  const shows = useShowsQuery();
  console.log(shows);

  const options = {
    keys: [{name:'showName', weight:1}, {name:'desc', weight:3}, {name:'host', weight:1}],
    threshold: 0.4,
    distance: 1000,
    ingoreLocation: true,
    includeScore: true,
  };
  if(!shows){return null}
  const fuse = new Fuse(shows, options);
  const itemToString = (result) => (result ? result.item.showName : '')
  function handleSearch(inputValue) {
    console.log("---", inputValue)

    const searchResults = Object.values(fuse.search(inputValue));
    console.log(searchResults );
    for (var result of searchResults){
      console.log(result.item.showName + " - " + result.score);
    }
    return searchResults;
    // console.log(searchResults.reduce((acc,result) => acc + ", " + result.item.showName ,""));
    //update the state with the search results
    //or pass the searchResults to child component to render it
  }

  return (
    <>
      <Head>
        <title>Community Podcast</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
      {/* <input type="text" onChange={handleSearch}/> */}
      <ComboBoxSearch handleSearch={handleSearch} itemToString={itemToString}></ComboBoxSearch>
      </main>
    </>
  )
}
